{
  "version": 3,
  "sources": ["dist/Text.js", "dist/index.js"],
  "sourcesContent": ["const defaultStyle = {\n    fontSize: 32,\n    fontWeight: 'regular',\n    color: '#000000',\n    backgroundColor: '#ffffff',\n    padding: 8,\n    cornerRadius: 8,\n    italic: false,\n    underline: false,\n    strikethrough: false,\n    kerning: 0,\n    lineSpacing: 0,\n    textAlignment: 'leading'\n};\n// Text styling API\nexport class Text {\n    constructor(config, textIds) {\n        this.textIds = textIds;\n        this.id = config.id || generateId();\n        this.text = config.text;\n        this.style = {\n            ...defaultStyle,\n            ...config.style || {}\n        };\n    }\n    // Create the text in SwiftUI\n    create() {\n        createSwiftText(this.id, this.text, this.style);\n        this.textIds.add(this.id);\n        return this;\n    }\n    // Update existing text\n    update(config) {\n        if (config.text !== undefined) {\n            this.text = config.text;\n        }\n        if (config.style) {\n            this.style = {\n                ...this.style,\n                ...config.style\n            };\n        }\n        updateSwiftText(this.id, this.text, this.style);\n        return this;\n    }\n    // Get the current ID\n    getId() {\n        return this.id;\n    }\n}\n// Helper function to generate unique IDs\nfunction generateId() {\n    return 'text_' + Math.random().toString(36).substr(2, 9);\n}\n", "import { Text } from './Text.js';\n// State for this instance\nconst textIds = new Set();\nconst timerIds = new Set();\n// Create a counter text\nlet count = 0;\nconst counter = new Text({\n    text: `Counter: ${count}`,\n    style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: '#4a148c',\n        backgroundColor: '#f3e5f5',\n        padding: 16,\n        cornerRadius: 12,\n        textAlignment: 'center'\n    }\n}, textIds).create();\n// Update counter every second\nconst timerId = setInterval(() => {\n    count++;\n    counter.update({ text: `Counter: ${count}` });\n}, 1000);\ntimerIds.add(timerId);\n// Create some welcome texts\nnew Text({\n    text: \"Hello from JavaScript! \uD83D\uDC4B\",\n    style: {\n        fontSize: 20,\n        color: '#1e88e5',\n        backgroundColor: '#e3f2fd',\n        padding: 12,\n        cornerRadius: 10,\n        shadowRadius: 4,\n        shadowX: 2,\n        shadowY: 2,\n        shadowColor: '#000000'\n    }\n}, textIds).create();\nnew Text({\n    text: \"Swift and JavaScript working together \uD83E\uDD1D\",\n    style: {\n        fontSize: 16,\n        color: '#2e7d32',\n        backgroundColor: '#e8f5e9',\n        padding: 14,\n        cornerRadius: 8,\n        fontWeight: 'bold'\n    }\n}, textIds).create();\nnew Text({\n    text: \"Dynamic text creation \uD83D\uDE80\",\n    style: {\n        fontSize: 18,\n        color: '#c2185b',\n        backgroundColor: '#fce4ec',\n        padding: 10,\n        cornerRadius: 15,\n        textAlignment: 'center',\n        shadowRadius: 3,\n        shadowX: 1,\n        shadowY: 1,\n        shadowColor: '#000000'\n    }\n}, textIds).create();\n"],
  "mappings": ";;;AAAA,MAAM,eAAe;AAAA,IACjB,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,eAAe;AAAA,IACf,SAAS;AAAA,IACT,aAAa;AAAA,IACb,eAAe;AAAA,EACnB;AAEO,MAAM,OAAN,MAAW;AAAA,IACd,YAAY,QAAQA,UAAS;AACzB,WAAK,UAAUA;AACf,WAAK,KAAK,OAAO,MAAM,WAAW;AAClC,WAAK,OAAO,OAAO;AACnB,WAAK,QAAQ;AAAA,QACT,GAAG;AAAA,QACH,GAAG,OAAO,SAAS,CAAC;AAAA,MACxB;AAAA,IACJ;AAAA;AAAA,IAEA,SAAS;AACL,sBAAgB,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK;AAC9C,WAAK,QAAQ,IAAI,KAAK,EAAE;AACxB,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,OAAO,QAAQ;AACX,UAAI,OAAO,SAAS,QAAW;AAC3B,aAAK,OAAO,OAAO;AAAA,MACvB;AACA,UAAI,OAAO,OAAO;AACd,aAAK,QAAQ;AAAA,UACT,GAAG,KAAK;AAAA,UACR,GAAG,OAAO;AAAA,QACd;AAAA,MACJ;AACA,sBAAgB,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK;AAC9C,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,QAAQ;AACJ,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AAEA,WAAS,aAAa;AAClB,WAAO,UAAU,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC;AAAA,EAC3D;;;ACnDA,MAAM,UAAU,oBAAI,IAAI;AACxB,MAAM,WAAW,oBAAI,IAAI;AAEzB,MAAI,QAAQ;AACZ,MAAM,UAAU,IAAI,KAAK;AAAA,IACrB,MAAM,YAAY,KAAK;AAAA,IACvB,OAAO;AAAA,MACH,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,eAAe;AAAA,IACnB;AAAA,EACJ,GAAG,OAAO,EAAE,OAAO;AAEnB,MAAM,UAAU,YAAY,MAAM;AAC9B;AACA,YAAQ,OAAO,EAAE,MAAM,YAAY,KAAK,GAAG,CAAC;AAAA,EAChD,GAAG,GAAI;AACP,WAAS,IAAI,OAAO;AAEpB,MAAI,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,MACH,UAAU;AAAA,MACV,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,cAAc;AAAA,MACd,SAAS;AAAA,MACT,SAAS;AAAA,MACT,aAAa;AAAA,IACjB;AAAA,EACJ,GAAG,OAAO,EAAE,OAAO;AACnB,MAAI,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,MACH,UAAU;AAAA,MACV,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,YAAY;AAAA,IAChB;AAAA,EACJ,GAAG,OAAO,EAAE,OAAO;AACnB,MAAI,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,MACH,UAAU;AAAA,MACV,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,eAAe;AAAA,MACf,cAAc;AAAA,MACd,SAAS;AAAA,MACT,SAAS;AAAA,MACT,aAAa;AAAA,IACjB;AAAA,EACJ,GAAG,OAAO,EAAE,OAAO;",
  "names": ["textIds"]
}
