{
  "version": 3,
  "sources": ["typescript/Text.ts", "typescript/index.ts"],
  "sourcesContent": ["declare function createSwiftText(id: string, text: string, style: TextStyle): void;\ndeclare function updateSwiftText(id: string, text: string, style: TextStyle): void;\n\nexport interface TextStyle {\n    fontSize?: number;\n    fontWeight?: string;\n    color?: string;\n    backgroundColor?: string;\n    padding?: number;\n    cornerRadius?: number;\n    italic?: boolean;\n    underline?: boolean;\n    strikethrough?: boolean;\n    kerning?: number;\n    lineSpacing?: number;\n    textAlignment?: string;\n    shadowRadius?: number;\n    shadowX?: number;\n    shadowY?: number;\n    shadowColor?: string;\n}\n\nexport interface TextConfig {\n    id?: string;\n    text: string;\n    style?: TextStyle;\n}\n\nconst defaultStyle: TextStyle = {\n    fontSize: 32,\n    fontWeight: 'regular',\n    color: '#000000',\n    backgroundColor: '#ffffff',\n    padding: 8,\n    cornerRadius: 8,\n    italic: false,\n    underline: false,\n    strikethrough: false,\n    kerning: 0,\n    lineSpacing: 0,\n    textAlignment: 'leading'\n};\n\n// Text styling API\nexport class Text {\n    private textIds: Set<string>;\n    private id: string;\n    private text: string;\n    private style: TextStyle;\n\n    constructor(config: TextConfig, textIds: Set<string>) {\n        this.textIds = textIds;\n        this.id = config.id || generateId();\n        this.text = config.text;\n        this.style = {\n            ...defaultStyle,\n            ...config.style || {}\n        };\n    }\n\n    // Create the text in SwiftUI\n    create(): this {\n        createSwiftText(this.id, this.text, this.style);\n        this.textIds.add(this.id);\n        return this;\n    }\n\n    // Update existing text\n    update(config: Partial<TextConfig>): this {\n        if (config.text !== undefined) {\n            this.text = config.text;\n        }\n        if (config.style) {\n            this.style = {\n                ...this.style,\n                ...config.style\n            };\n        }\n        updateSwiftText(this.id, this.text, this.style);\n        return this;\n    }\n\n    // Get the current ID\n    getId(): string {\n        return this.id;\n    }\n}\n\n// Helper function to generate unique IDs\nfunction generateId(): string {\n    return 'text_' + Math.random().toString(36).substr(2, 9);\n}", "import { Text } from './Text.js';\n\n// State for this instance\nconst textIds: Set<string> = new Set();\nconst timerIds: Set<NodeJS.Timeout> = new Set();\n\n// Create a counter text\nlet count = 0;\nconst counter = new Text({\n    text: `Counter: ${count}`,\n    style: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: '#4a148c',\n        backgroundColor: '#f3e5f5',\n        padding: 16,\n        cornerRadius: 12,\n        textAlignment: 'center'\n    }\n}, textIds).create();\n\n// Update counter every second\nconst timerId = setInterval(() => {\n    count++;\n    counter.update({ text: `Counter: ${count}` });\n}, 1000);\ntimerIds.add(timerId);\n\n// Create some welcome texts\nnew Text({\n    text: \"Hello from JavaScript! \uD83D\uDC4B\",\n    style: {\n        fontSize: 20,\n        color: '#1e88e5',\n        backgroundColor: '#e3f2fd',\n        padding: 12,\n        cornerRadius: 10,\n        shadowRadius: 4,\n        shadowX: 2,\n        shadowY: 2,\n        shadowColor: '#000000'\n    }\n}, textIds).create();\n\nnew Text({\n    text: \"Swift and JavaScript working together \uD83E\uDD1D\",\n    style: {\n        fontSize: 16,\n        color: '#2e7d32',\n        backgroundColor: '#e8f5e9',\n        padding: 14,\n        cornerRadius: 8,\n        fontWeight: 'bold'\n    }\n}, textIds).create();\n\nnew Text({\n    text: \"Dynamic text creation \uD83D\uDE80\",\n    style: {\n        fontSize: 18,\n        color: '#c2185b',\n        backgroundColor: '#fce4ec',\n        padding: 10,\n        cornerRadius: 15,\n        textAlignment: 'center',\n        shadowRadius: 3,\n        shadowX: 1,\n        shadowY: 1,\n        shadowColor: '#000000'\n    }\n}, textIds).create();\n"],
  "mappings": "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",
  "names": []
}
